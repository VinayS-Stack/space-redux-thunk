{"version":3,"sources":["components/DataTypes.js","action/Action.js","FrontEnd/Buttons.js","FrontEnd/Heading.js","FrontEnd/View.js","components/Home.js","App.js","reducer/Reducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","fetchLaunch","year","launch","land","dispatch","type","url","axios","get","then","response","rockets","data","console","log","payload","fetchDataSuccess","catch","error","errorMsg","message","fetchDataFailure","Buttons","useDispatch","useState","queryYear","setQueryYear","queryLaunchSuccess","setQueryLaunchSuccess","queryLandSuccess","setQueryLandSuccess","useEffect","theme","createMuiTheme","palette","primary","green","classes","makeStyles","overline","fontSize","fontWeight","useStyles","Fragment","Card","Typography","variant","className","component","CardContent","ThemeProvider","map","index","Button","padding","color","onClick","Heading","responsiveFontSizes","align","View","launches","useSelector","state","rocket","card","display","spacing","media","height","width","typography","fontFamily","isLoading","src","alt","Grid","item","xs","container","direction","name","sm","CardActionArea","CardMedia","image","links","mission_patch_small","title","gutterBottom","mission_name","mission_id","launch_year","launch_success","first_stage","cores","land_success","flight_name","Home","App","initialState","rocketReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0b405d.chunk.js","sourcesContent":["export const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_FAILURE = \"FETCH_DATA_SUCCESS\";\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_DATA_FAILURE,\r\n  FETCH_DATA_REQUEST,\r\n  FETCH_DATA_SUCCESS,\r\n} from \"../components/DataTypes\";\r\n\r\nexport const fetchDataRequest = () => {\r\n  return {\r\n    type: FETCH_DATA_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchDataSuccess = (rockets) => {\r\n  return {\r\n    type: FETCH_DATA_SUCCESS,\r\n    payload: rockets,\r\n  };\r\n};\r\n\r\nexport const fetchDataFailure = (error) => {\r\n  return {\r\n    type: FETCH_DATA_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchLaunch = (year, launch, land) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    let url = \"https://api.spacexdata.com/v3/launches?limit=100\";\r\n\r\n    if (year) {\r\n      url = `${url}${year}`;\r\n    }\r\n    if (launch) {\r\n      url = `${url}${launch}`;\r\n    }\r\n    if (land) {\r\n      url = `${url}${land}`;\r\n    }\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const rockets = response.data;\r\n        console.log(response.data);\r\n        dispatch(fetchDataSuccess(rockets));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchDataFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchLaunch } from \"../Redux\";\r\nimport {\r\n  Button,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nfunction Buttons() {\r\n  const dispatch = useDispatch();\r\n  const years = [\r\n    2006,\r\n    2007,\r\n    2008,\r\n    2009,\r\n    2010,\r\n    2011,\r\n    2012,\r\n    2013,\r\n    2014,\r\n    2015,\r\n    2016,\r\n    2017,\r\n    2018,\r\n    2019,\r\n    2020,\r\n    2021,\r\n  ];\r\n  const [queryYear, setQueryYear] = useState(\"\");\r\n  const [queryLaunchSuccess, setQueryLaunchSuccess] = useState();\r\n  const [queryLandSuccess, setQueryLandSuccess] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLaunch(queryYear, queryLaunchSuccess, queryLandSuccess));\r\n  }, [dispatch, queryYear, queryLaunchSuccess, queryLandSuccess]);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n  const useStyles = makeStyles({\r\n    overline: {\r\n      fontSize: 19,\r\n      fontWeight: 900,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <Typography\r\n          variant=\"overline\"\r\n          className={classes.overline}\r\n          component=\"h1\"\r\n        >\r\n          Filters\r\n        </Typography>\r\n        <CardContent>\r\n          <ThemeProvider theme={theme}>\r\n            {years.map((year, index) => (\r\n              <Button\r\n                className={classes.padding}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                key={index}\r\n                onClick={() => setQueryYear(`&launch_year=${year}`)}\r\n              >\r\n                {year}\r\n              </Button>\r\n            ))}\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Launch Success\r\n            </Typography>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setQueryLaunchSuccess(`&launch_success=true`)}\r\n            >\r\n              True\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setQueryLaunchSuccess(`&launch_year=false`)}\r\n            >\r\n              False\r\n            </Button>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Land Success\r\n            </Typography>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setQueryLandSuccess(`&land_success=true`)}\r\n            >\r\n              True\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setQueryLandSuccess(`&land_success=false`)}\r\n            >\r\n              False\r\n            </Button>\r\n          </ThemeProvider>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport {\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Heading() {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n          Space X Assignment\r\n        </Typography>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Heading;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLaunch } from \"../Redux\";\r\n\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction View() {\r\n  const dispatch = useDispatch();\r\n  const launches = useSelector((state) => state.rocket);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLaunch());\r\n  }, [dispatch]);\r\n\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      display: \"flex\",\r\n      spacing: 2,\r\n    },\r\n    media: {\r\n      height: 300,\r\n      width: 300,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontSize: 14,\r\n      fontFamily: \"Mono-space\",\r\n    },\r\n  });\r\n\r\n  return launches?.isLoading ? (\r\n    <img\r\n      src=\"https://images.vexels.com/media/users/3/203409/isolated/lists/255fa1a5339446d19ef7068cfe170c7b-space-rocket-illustration-rocket.png\"\r\n      alt=\"...loading\"\r\n    />\r\n  ) : launches.error ? (\r\n    <h2>{launches.error}</h2>\r\n  ) : (\r\n    <React.Fragment>\r\n      <Card>\r\n        <Grid item xs={12} container direction=\"row\" className={classes}>\r\n          {launches &&\r\n            launches.rockets &&\r\n            launches.rockets.map((name) => (\r\n              <Grid item xs={12} sm={4} className={classes.card}>\r\n                <CardActionArea key={name.flight_name}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"space mission logos\"\r\n                    height=\"500\"\r\n                    image={name.links.mission_patch_small}\r\n                    title=\"Mission Logo\"\r\n                    className={classes.media}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h4\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      {name.mission_name}\r\n                    </Typography>\r\n                    <ThemeProvider theme={theme}>\r\n                      <Typography variant=\"body2\">\r\n                        <Typography variant=\"h5\" component=\"h1\">\r\n                          Mission ID: {name.mission_id}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h1\">\r\n                          Launch Year: {name.launch_year}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h1\">\r\n                          Launch Success:{\" \"}\r\n                          {name.launch_success ? \"true\" : \"false\"}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h1\">\r\n                          Land Success:\r\n                          {name.rocket.first_stage.cores[0].land_success\r\n                            ? \"true\"\r\n                            : \"false\"}\r\n                        </Typography>\r\n                      </Typography>\r\n                    </ThemeProvider>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Buttons from \"../FrontEnd/Buttons\";\r\nimport Heading from \"../FrontEnd/Heading\";\r\nimport View from \"../FrontEnd/View\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container xs={12}>\r\n        <Grid xs={12}>\r\n          <Heading />\r\n        </Grid>\r\n        <Grid item xs={0} sm={2}>\r\n          <Buttons />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Grid>\r\n            <View />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_DATA_FAILURE,\r\n  FETCH_DATA_REQUEST,\r\n  FETCH_DATA_SUCCESS,\r\n} from \"../components/DataTypes\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  rockets: [],\r\n  error: \"\",\r\n};\r\n\r\nconst rocketReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FETCH_DATA_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        rockets: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_DATA_FAILURE:\r\n      return {\r\n        isLoading: false,\r\n        rockets: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rocketReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport rocketReducer from \"../reducer/Reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  rocket: rocketReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk, logger))\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './store/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}